stages:
  - test
  - scan-app
  - build
  - deploy
variables:
  TAG_LATEST: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest
  TAG_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA
  REGISTRY: $CI_REGISTRY
  USER: $CI_REGISTRY_USER
  PASSWORD: $CI_REGISTRY_PASSWORD
  KUBECONFIG: "/builds/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/kubeconfig"

test-login-registry:
  stage: test
  image: podman/stable:latest
  script:
    - podman login -u $USER -p $PASSWORD $REGISTRY


sonarqube-scan:
  stage:  scan-app
  image: sonarsource/sonar-scanner-cli
  script:
    - sonar-scanner -Dsonar.projectKey=DEMO -Dsonar.host.url=https://sonarque.demo -Dsonar.login=$SONAR_TOKEN -Dsonar.qualitygate.wait=false


build:
  stage: build
  image: podman/stable:latest
  before_script:
    - podman login -u $USER -p $PASSWORD $REGISTRY
  script:
    - podman build -f docker/Dockerfile -t $TAG_COMMIT -t $TAG_LATEST .
    - podman push $TAG_COMMIT
    - podman push $TAG_LATEST
  only:
    - master
    
deploy:
  image: bitnami/kubectl:latest
  stage: deploy
  before_script:
    - echo "$KUBECONFIG_CONTENT" | base64 --decode > $KUBECONFIG
    - sed -i 's|IMAGE|'"$TAG_LATEST"'|g' docker/deployment.yaml
  script:
    - kubectl apply -f docker/deployment.yaml
    - if ! kubectl rollout status deployment/demo-deployment -n demo --timeout=60s; then
        echo "Deployment failed, rolling back..."; 
        kubectl rollout undo deployment/demo-deployment -n demo; 
        exit 1;
      fi
    - sleep 60
    - kubectl get pod -n demo
  only:
    - master